version: '3'
services:
  redisservice:
    image: redis:alpine
    ports:
      - 6379:6379
    volumes:
      - cache:/data
    restart: always
    networks:
      - spice-app-db-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_MQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_MQ_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - spice-app-db-network

  authservice:
    image: auth-service
    build:
      context: ${PROJECT_PATH}/auth-service
      dockerfile: ${PROJECT_PATH}/auth-service/Dockerfile
    ports:
      - "8089:8089"
    restart: always
    links:
      - redisservice
    depends_on:
      - redisservice
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - DB_MAX_POOL_SIZE=${DB_MAX_POOL_SIZE}
      - AUTH_SERVICE=${AUTH_SERVICE}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - ENVIRONMENT=${ENVIRONMENT}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    volumes:
      - ${PROJECT_PATH}/log:/log
    networks:
      - spice-app-db-network

  userservice:
    image: user-service
    build:
      context: ${PROJECT_PATH}/user-service
      dockerfile: ${PROJECT_PATH}/user-service/Dockerfile
    ports:
      - "8085:8085"
    restart: always
    links:
      - redisservice
    depends_on:
      - redisservice
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - EMAIL_APP_URL=${EMAIL_APP_URL}
      - CFR_EMAIL_APP_URL=${CFR_EMAIL_APP_URL}
      - SPICE_SERVICE=${SPICE_SERVICE}
      - ADMIN_SERVICE=${ADMIN_SERVICE}
      - FHIR_SERVICE=${FHIR_SERVICE}
      - NOTIFICATION_SERVICE=${NOTIFICATION_SERVICE}
      - CFR_SERVICE=${CFR_SERVICE}
      - DB_MAX_POOL_SIZE=${DB_MAX_POOL_SIZE}
      - AUTH_SERVICE=${AUTH_SERVICE}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - SMS_RESET_PASSWORD_URL=${SMS_RESET_PASSWORD_URL}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - ENVIRONMENT=${ENVIRONMENT}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - FORGOT_PASSWORD_TIME_LIMIT_IN_MINUTES=${FORGOT_PASSWORD_TIME_LIMIT_IN_MINUTES}
      - SHORTEN_URL_DOMAIN=${SHORTEN_URL_DOMAIN}
      - SHORTEN_APP=${SHORTEN_APP}
    volumes:
      - ${PROJECT_PATH}/log:/log
    networks:
      - spice-app-db-network

  notificationservice:
    image: notification-service
    build:
      context: ${PROJECT_PATH}/notification-service
      dockerfile: ${PROJECT_PATH}/notification-service/Dockerfile
    ports:
      - "8084:8084"
    restart: always
    links:
      - redisservice
    volumes:
      - ${PROJECT_PATH}/log:/log
    depends_on:
      - redisservice
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM=${MAIL_FROM}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_SEND=${MAIL_SEND}
      - ENABLE_SMS_NOTIFICATION=${ENABLE_SMS_NOTIFICATION}
      - ENABLE_SMS_NOTIFICATION_SNS=${ENABLE_SMS_NOTIFICATION_SNS}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_FROM_PHONENO=${TWILIO_FROM_PHONENO}
      - SERVER_REGION=${SERVER_REGION}
      - SHEDLOCK_OUTBOUND_START=${SHEDLOCK_OUTBOUND_START}
      - SHEDLOCK_OUTBOUND_STOP=${SHEDLOCK_OUTBOUND_STOP}
      - SHEDLOCK_SMS_START=${SHEDLOCK_SMS_START}
      - SHEDLOCK_SMS_STOP=${SHEDLOCK_SMS_STOP}
      - ENABLE_SMS_NOTIFICATION_TWILIO=${ENABLE_SMS_NOTIFICATION_TWILIO}
      - SHEDLOCK_EMAIL_START=${SHEDLOCK_EMAIL_START}
      - SHEDLOCK_EMAIL_STOP=${SHEDLOCK_EMAIL_STOP}
      - DB_MAX_POOL_SIZE=${DB_MAX_POOL_SIZE}
      - AUTH_SERVICE=${AUTH_SERVICE}
      - DIGIMILES_SMS_URL=${DIGIMILES_SMS_URL}
      - DIGIMILES_SMS_USERNAME=${DIGIMILES_SMS_USERNAME}
      - DIGIMILES_SMS_PASSWORD=${DIGIMILES_SMS_PASSWORD}
      - DIGIMILES_SMS_TYPE=${DIGIMILES_SMS_TYPE}
      - DIGIMILES_SMS_DLR=${DIGIMILES_SMS_DLR}
      - DIGIMILES_SMS_SENDER=${DIGIMILES_SMS_SENDER}
      - ENABLE_SMS_NOTIFICATION_DIGIMILES=${ENABLE_SMS_NOTIFICATION_DIGIMILES}
    networks:
      - spice-app-db-network

  adminservice:
    image: admin-service
    build:
      context: ${PROJECT_PATH}/admin-service
      dockerfile: ${PROJECT_PATH}/admin-service/Dockerfile
    ports:
      - "8086:8086"
    links:
      - redisservice
    restart: always
    volumes:
      - ${PROJECT_PATH}/log:/log
    depends_on:
      - redisservice
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - USER_SERVICE=${USER_SERVICE}
      - ADMIN_SERVICE=${ADMIN_SERVICE}
      - FHIR_SERVICE=${FHIR_SERVICE}
      - NOTIFICATION_SERVICE=${NOTIFICATION_SERVICE}
      - DB_MAX_POOL_SIZE=${DB_MAX_POOL_SIZE}
      - AUTH_SERVICE=${AUTH_SERVICE}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - ENVIRONMENT=${ENVIRONMENT}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - IS_CLOUD=${IS_CLOUD}
      - SERVER_REGION=${SERVER_REGION}
      - AWS_ENVIRONMENT=${AWS_ENVIRONMENT}

    networks:
      - spice-app-db-network

  spiceservice:
    image: spice-service
    build:
      context: ${PROJECT_PATH}/spice-service
      dockerfile: ${PROJECT_PATH}/spice-service/Dockerfile
    ports:
      - "8087:8087"
    restart: always
    links:
      - redisservice
    volumes:
      - ${PROJECT_PATH}/log:/log
    depends_on:
      - redisservice
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - SERVER_REGION=${SERVER_REGION}
      - BUCKET_NAME=${BUCKET_NAME}
      - SIGNATURE_BUCKET_FOLDER=${SIGNATURE_BUCKET_FOLDER}
      - IN_APP_ANALYTICS_BUCKET_FOLDER=${IN_APP_ANALYTICS_BUCKET_FOLDER}
      - SHEDLOCK_OUTBOUND_START=${SHEDLOCK_OUTBOUND_START}
      - SHEDLOCK_OUTBOUND_STOP=${SHEDLOCK_OUTBOUND_STOP}
      - USER_SERVICE=${USER_SERVICE}
      - ADMIN_SERVICE=${ADMIN_SERVICE}
      - FHIR_SERVICE=${FHIR_SERVICE}
      - NOTIFICATION_SERVICE=${NOTIFICATION_SERVICE}
      - DB_MAX_POOL_SIZE=${DB_MAX_POOL_SIZE}
      - AUTH_SERVICE=${AUTH_SERVICE}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - SUCCESSFUL_CALL_ATTEMPTS=${SUCCESSFUL_CALL_ATTEMPTS}
      - UNSUCCESSFUL_CALL_ATTEMPTS=${UNSUCCESSFUL_CALL_ATTEMPTS}
      - FOLLOWUP_MALARIA_IN_DAYS=${FOLLOWUP_MALARIA_IN_DAYS}
      - FOLLOWUP_PNEUMONIA_IN_DAYS=${FOLLOWUP_PNEUMONIA_IN_DAYS}
      - FOLLOWUP_DIARRHEA_IN_DAYS=${FOLLOWUP_DIARRHEA_IN_DAYS}
      - FOLLOWUP_MUAC_IN_DAYS=${FOLLOWUP_MUAC_IN_DAYS}
      - FOLLOWUP_ESCALATION_LIMIT_IN_DAYS=${FOLLOWUP_ESCALATION_LIMIT_IN_DAYS}
      - FOLLOWUP_REFERRAL_IN_DAYS=${FOLLOWUP_REFERRAL_IN_DAYS}
      - FOLLOWUP_ANC_VISIT_IN_DAYS=${FOLLOWUP_ANC_VISIT_IN_DAYS}
      - FOLLOWUP_PNC_VISIT_IN_DAYS=${FOLLOWUP_PNC_VISIT_IN_DAYS}
      - FOLLOWUP_CHILD_VISIT_IN_DAYS=${FOLLOWUP_CHILD_VISIT_IN_DAYS}
      - SMART_ANC_ENABLED=${SMART_ANC_ENABLED}
      - JOB_USER_NAME=${JOB_USER_NAME}
      - AWS_ENVIRONMENT=${AWS_ENVIRONMENT}
      - APP_VERSION=${APP_VERSION}
      - RETRY_CALL_ATTEMPTS=${RETRY_CALL_ATTEMPTS}
      - ENABLE_RED_RISK_NOTIFICATION=${ENABLE_RED_RISK_NOTIFICATION}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - ENVIRONMENT=${ENVIRONMENT}
      - FOLLOWUP_CALL_ATTEMPTS=${FOLLOWUP_CALL_ATTEMPTS}
      - SCREENING_FOLLOWUP_REMAINING_DAYS=${SCREENING_FOLLOWUP_REMAINING_DAYS}
      - ASSESSMENT_FOLLOWUP_REMAINING_DAYS=${ASSESSMENT_FOLLOWUP_REMAINING_DAYS}
      - MEDICAL_REVIEW_FOLLOWUP_REMAINING_DAYS=${MEDICAL_REVIEW_FOLLOWUP_REMAINING_DAYS}
      - LOST_TO_FOLLOWUP_REMAINING_DAYS=${LOST_TO_FOLLOWUP_REMAINING_DAYS}
      - VERSION_CHECK_EXEMPT_USERS=${VERSION_CHECK_EXEMPT_USERS}
      - IS_MINIO_SERVER_ENABLE=${IS_MINIO_SERVER_ENABLE}
      - MINIO_URL=${MINIO_URL}
      - MINIO_CONSOLE_URL=${MINIO_CONSOLE_URL}
      - MINIO_ACCESS_NAME=${MINIO_ACCESS_NAME}
      - MINO_SECRET_KEY=${MINO_SECRET_KEY}
    networks:
      - spice-app-db-network

  offlineservice:
    image: offline-service
    build:
      context: ${PROJECT_PATH}/offline-service
      dockerfile: ${PROJECT_PATH}/offline-service/Dockerfile
    ports:
      - "8093:8093"
    restart: always
    links:
      - redisservice
    volumes:
      - ${PROJECT_PATH}/log:/log
    depends_on:
      - redisservice
      - rabbitmq
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - SHEDLOCK_OUTBOUND_START=${SHEDLOCK_OUTBOUND_START}
      - SHEDLOCK_OUTBOUND_STOP=${SHEDLOCK_OUTBOUND_STOP}
      - DB_MAX_POOL_SIZE=${DB_MAX_POOL_SIZE}
      - AUTH_SERVICE=${AUTH_SERVICE}
      - SQS_REQUEST_QUEUE_URL=${SQS_REQUEST_QUEUE_URL}
      - SQS_RESPONSE_QUEUE_URL=${SQS_RESPONSE_QUEUE_URL}
      - SQS_REQUEST_QUEUE_NAME=${SQS_REQUEST_QUEUE_NAME}
      - SQS_RESPONSE_QUEUE_NAME=${SQS_RESPONSE_QUEUE_NAME}
      - CONSENT_FORM_BUCKET_FOLDER=${CONSENT_FORM_BUCKET_FOLDER}
      - FHIR_SERVICE=${FHIR_SERVICE}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - SPICE_SERVICE=${SPICE_SERVICE}
      - CQL_SERVICE=${CQL_SERVICE}
      - ADMIN_SERVICE=${ADMIN_SERVICE}
      - JOB_USER_PASSWORD=${JOB_USER_PASSWORD}
      - JOB_USER_NAME=${JOB_USER_NAME}
      - SMART_ANC_ENABLED=${SMART_ANC_ENABLED}
      - AWS_ENVIRONMENT=${AWS_ENVIRONMENT}
      - IS_AWS_SQS_ENABLED=${IS_AWS_SQS_ENABLED}
      - IS_RABBITMQ_SQS_ENABLED=${IS_RABBITMQ_SQS_ENABLED}
      - RABBIT_MQ_HOST=${RABBIT_MQ_HOST}
      - RABBIT_MQ_PORT=${RABBIT_MQ_PORT}
      - RABBIT_MQ_USERNAME=${RABBIT_MQ_USERNAME}
      - RABBIT_MQ_PASSWORD=${RABBIT_MQ_PASSWORD}
      - RABBIT_MQ_EXCHANGE_NAME=${RABBIT_MQ_EXCHANGE_NAME}
      - RABBIT_MQ_GROUP=${RABBIT_MQ_GROUP}
      - RABBIT_PRODUCER_CHANNEL=${RABBIT_PRODUCER_CHANNEL}
      - RABBIT_CONSUMER_CHANNEL=${RABBIT_CONSUMER_CHANNEL}
      - IS_MINIO_SERVER_ENABLE=${IS_MINIO_SERVER_ENABLE}
      - MINIO_URL=${MINIO_URL}
      - MINIO_CONSOLE_URL=${MINIO_CONSOLE_URL}
      - MINIO_ACCESS_NAME=${MINIO_ACCESS_NAME}
      - MINO_SECRET_KEY=${MINO_SECRET_KEY}
      - BUCKET_NAME=${BUCKET_NAME}
      - SERVER_REGION=${SERVER_REGION}
    networks:
      - spice-app-db-network

  nginx:
    image: nginx:1.13-alpine
    ports:
      - 80:80
    restart: always
    volumes:
      - ${PROJECT_PATH}/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - spice-app-db-network

  fhirmapper:
    image: fhir-mapper
    build:
      context: ${PROJECT_PATH}/fhir-mapper
      dockerfile: ${PROJECT_PATH}/fhir-mapper/Dockerfile
    ports:
      - "8092:8092"
    restart: always
    volumes:
      - ${PROJECT_PATH}/log:/log
    environment:
      - HAPI_SERVER_URL=${HAPI_SERVER_URL}
      - HAPI_IDENTIFIER_URL=${HAPI_IDENTIFIER_URL}
      - ADMIN_SERVICE=${ADMIN_SERVICE}
      - AUTH_SERVICE=${AUTH_SERVICE}
      - CQL_SERVICE=${CQL_SERVICE}
      - USER_SERVICE=${USER_SERVICE}
      - NOTIFICATION_SERVICE=${NOTIFICATION_SERVICE}
      - SPICE_SERVICE=${SPICE_SERVICE}
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DB_MAX_POOL_SIZE=${DB_MAX_POOL_SIZE}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - SMART_ANC_ENABLED=${SMART_ANC_ENABLED}
      - LAB_TEST_INTENSIFICATION_LIST=${LAB_TEST_INTENSIFICATION_LIST}
      - PRESCRIPTION_PREDICTION_DAYS=${PRESCRIPTION_PREDICTION_DAYS}
    networks:
      - spice-app-db-network

  cqlservice:
    image: cql-service
    build:
      context: ${PROJECT_PATH}/cql-service
      dockerfile: ${PROJECT_PATH}/cql-service/Dockerfile
    ports:
      - "8094:8094"
    restart: always
    volumes:
      - ${PROJECT_PATH}/log:/log
      - cql:/cql
      - valueset:/valueset
    environment:
      - HAPI_SERVER_URL=${HAPI_SERVER_URL}
      - AUTH_SERVICE=${AUTH_SERVICE}
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DB_MAX_POOL_SIZE=${DB_MAX_POOL_SIZE}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - CQL_PATH=/cql
      - VALUESET_PATH=/valueset
    networks:
      - spice-app-db-network

  shorturlservice:
    image: shorturl-service
    build:
      context: ${PROJECT_PATH}/shorturl-service
      dockerfile: ${PROJECT_PATH}/shorturl-service/Dockerfile
    ports:
      - "8095:8095"
    restart: always
    volumes:
      - ${PROJECT_PATH}/log:/log
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - SHORTEN_URL_DOMAIN=${SHORTEN_URL_DOMAIN}
    networks:
      - spice-app-db-network

networks:
  spice-app-db-network:
    driver: bridge

volumes:
  cache:
    driver: local
  cql:
    driver: local
    driver_opts:
      type: none
      device: ${PROJECT_PATH}/cql-service/src/main/resources/anc/cql
      o: bind
  valueset:
    driver: local
    driver_opts:
      type: none
      device: ${PROJECT_PATH}/cql-service/src/main/resources/anc/valueset
      o: bind
  rabbitmq-data:
