##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	proxy_connect_timeout 300s;
	proxy_send_timeout 300s;
	proxy_read_timeout 300s;
	client_max_body_size 150M;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location /auth-service/ {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    rewrite ^/auth-service/(.*)$ /$1 break;
    proxy_pass http://authservice:8089;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  location /user/swagger-ui/ {
	  # First attempt to serve request as file, then
	  # as directory, then fall back to displaying a 404.
	  proxy_pass http://userservice:8085/user/swagger-ui/;
	  proxy_http_version 1.1;
	  proxy_set_header Upgrade $http_upgrade;
	  proxy_set_header Connection 'upgrade';
	  proxy_set_header Host $host;
	  proxy_cache_bypass $http_upgrade;
  }

  location /user-service/ {
	  # First attempt to serve request as file, then
	  # as directory, then fall back to displaying a 404.
	  rewrite ^/user-service/(.*)$ /$1 break;
	  proxy_pass http://userservice:8085;
	  proxy_http_version 1.1;
	  proxy_set_header Upgrade $http_upgrade;
	  proxy_set_header Connection 'upgrade';
	  proxy_set_header Host $host;
	  proxy_cache_bypass $http_upgrade;
  }

  location /admin/swagger-ui/ {
    	  # First attempt to serve request as file, then
    	  # as directory, then fall back to displaying a 404.
    	  proxy_pass http://adminservice:8086/admin/swagger-ui/;
    	  proxy_http_version 1.1;
    	  proxy_set_header Upgrade $http_upgrade;
    	  proxy_set_header Connection 'upgrade';
    	  proxy_set_header Host $host;
    	  proxy_cache_bypass $http_upgrade;
  }

  location /admin-service/ {
	  rewrite ^/admin-service/(.*)$ /$1 break;
    proxy_pass http://adminservice:8086;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  location /fhir/swagger-ui/ {
  	  # First attempt to serve request as file, then
  	  # as directory, then fall back to displaying a 404.
  	  proxy_pass http://fhirmapper:8092/fhir/swagger-ui/;
  	  proxy_http_version 1.1;
  	  proxy_set_header Upgrade $http_upgrade;
  	  proxy_set_header Connection 'upgrade';
  	  proxy_set_header Host $host;
  	  proxy_cache_bypass $http_upgrade;
    }

  location /fhir-mapper/ {
	  rewrite ^/fhir-mapper/(.*)$ /$1 break;
    proxy_pass http://fhirmapper:8092;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  location /notification-service/ {
 	  rewrite ^/notification-service/(.*)$ /$1 break;
     proxy_pass http://notificationservice:8084;
     proxy_http_version 1.1;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection 'upgrade';
     proxy_set_header Host $host;
     proxy_cache_bypass $http_upgrade;
  }

  location /spice-service/ {
	  rewrite ^/spice-service/(.*)$ /$1 break;
    proxy_pass http://spiceservice:8087;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  location /offline-service/ {
   	  rewrite ^/offline-service/(.*)$ /$1 break;
       proxy_pass http://offlineservice:8093;
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection 'upgrade';
       proxy_set_header Host $host;
       proxy_cache_bypass $http_upgrade;
  }

  location /spice/swagger-ui/ {
  	  # First attempt to serve request as file, then
  	  # as directory, then fall back to displaying a 404.
  	  proxy_pass http://spiceservice:8087/spice/swagger-ui/;
  	  proxy_http_version 1.1;
  	  proxy_set_header Upgrade $http_upgrade;
  	  proxy_set_header Connection 'upgrade';
  	  proxy_set_header Host $host;
  	  proxy_cache_bypass $http_upgrade;
    }

  location /cql-service/ {
	  rewrite ^/cql-service/(.*)$ /$1 break;
    proxy_pass http://cqlservice:8094;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  location /cql/swagger-ui/ {
	  # First attempt to serve request as file, then
	  # as directory, then fall back to displaying a 404.
	  proxy_pass http://cqlservice:8094/cql/swagger-ui/;
	  proxy_http_version 1.1;
	  proxy_set_header Upgrade $http_upgrade;
	  proxy_set_header Connection 'upgrade';
	  proxy_set_header Host $host;
	  proxy_cache_bypass $http_upgrade;
  }

  location /shorturl-service/ {
	  # First attempt to serve request as file, then
	  # as directory, then fall back to displaying a 404.
	  rewrite ^/shorturl-service/(.*)$ /$1 break;
	  proxy_pass http://shorturlservice:8095;
	  proxy_http_version 1.1;
	  proxy_set_header Upgrade $http_upgrade;
	  proxy_set_header Connection 'upgrade';
	  proxy_set_header Host $host;
	  proxy_cache_bypass $http_upgrade;
  }

  location / {
	  # First attempt to serve request as file, then
	  # as directory, then fall back to displaying a 404.
    # try_files $uri $uri/ =404;
    root   /usr/share/nginx/html;
    index  index.html index.htm;
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
